form > c-button {
	--button: var(--field);
	--on-button: var(--on-field);
	width: max-content;
}

.form__field > *,
.material-input {
	width: 100%;
}

.material-input {
	--valid: green;
	--invalid: red;
	--padding: 0.5rem;
	--border-width: 1px; // don't modify
	--border-color: currentColor;
	--border-radius: 4px;
	height: 48px;
	max-height: 48px;
	min-height: 48px;
	position: relative;

	input,
	select,
	textarea {
		appearance: none;
		background: transparent;
		border-radius: var(--border-radius);
		border: none;
		color: inherit;
		display: block;
		font-size: 16px;
		height: 48px;
		margin: 0;
		padding: 0 var(--padding);
		width: 100%;
		width: calc(100% - var(--padding) * 2);

		&:focus {
			outline: none;
		}

		&:required + div > label > span:after {
			content: '*';
			left: 0.1em;
			position: relative;
			transform: scale(0.5);
		}
	}

	select {
		color: inherit;
		width: 100%;

		option {
			color: initial;
		}

		~ i {
			background: linear-gradient(
				to bottom right,
				transparent 0%,
				transparent 50%,
				currentColor 50%,
				currentColor 100%
			);
			content: '';
			display: block;
			height: 6px;
			position: absolute;
			right: 12px;
			top: calc(50% - 4px);
			transform: rotate(45deg);
			width: 6px;
		}
	}

	&-outline {
		display: flex;
		height: 100%;
		left: 0;
		pointer-events: none;
		position: absolute;
		top: 0;
		width: 100%;

		&:before,
		&:after {
			border: var(--border-width) solid var(--border-color);
			content: '';
			width: var(--padding);
		}

		&:before {
			border-bottom-left-radius: var(--border-radius);
			border-right: none;
			border-top-left-radius: var(--border-radius);
		}

		&:after {
			border-bottom-right-radius: var(--border-radius);
			border-left: none;
			border-top-right-radius: var(--border-radius);
			flex-grow: 1;
		}

		label {
			align-items: center;
			border-bottom: var(--border-width) solid var(--border-color);
			border-top: var(--border-width) solid var(--border-color);
			display: flex;

			span {
				transition: transform 0.25s;
				will-change: transform;
			}
		}
	}

	input:focus + &-outline,
	input:not(:placeholder-shown) + &-outline,
	textarea:focus + &-outline,
	textarea:not(:placeholder-shown) + &-outline,
	select:focus + &-outline,
	select[data-active] + &-outline,
	select[data-active]:focus + &-outline {
		--border-color: var(--field);

		label {
			border-top: var(--border-width) solid transparent;
			font-size: 12px;
			padding-left: 0.5em;
			padding-right: 0.5em;

			span {
				position: relative;
				transform: translatey(-24px);
			}
		}
	}

	input:focus + &-outline,
	textarea:focus + &-outline,
	select:focus + &-outline,
	select[data-active]:focus + &-outline {
		--border-width: 2px;

		label {
			color: var(--field);
		}
	}

	&--textarea {
		display: grid;
		height: auto;
		max-height: none;

		&:after {
			content: attr(data-replicated-value) ' ';
			visibility: hidden;
			white-space: pre-wrap;
		}

		label {
			align-items: flex-start;
			padding-top: 14px;
		}

		textarea {
			height: auto;
			max-height: none;
			min-height: 7.25em;
			overflow-y: hidden;
			resize: none;
		}

		&:after,
		textarea {
			box-sizing: border-box;
			font: inherit;
			grid-area: 1 / 1 / 2 / 2;
			padding: 14px var(--padding);
		}
	}

	select[data-active] + &-outline {
		--border-color: currentColor;
		--border-width: 1px;
	}

	input:not(:focus):not(:placeholder-shown):valid + .material-input-outline,
	textarea:not(:focus):not(:placeholder-shown):valid + .material-input-outline {
		--border-color: var(--valid);
		color: var(--valid);
	}

	input:not(:focus):not(:placeholder-shown):invalid + .material-input-outline {
		--border-color: var(--invalid);
		color: var(--invalid);
	}

	input:not(:focus):not(:placeholder-shown):invalid,
	input:not(:focus):not(:placeholder-shown):invalid + .material-input-outline {
		animation-timing-function: ease-in-out;
		animation: headShake 1s;
		will-change: transform;
	}
}

.grecaptcha-badge {
	visibility: hidden;
}

@keyframes headShake {
	0% {
		transform: translateX(0);
	}
	6.5% {
		transform: translateX(-6px);
	}
	18.5% {
		transform: translateX(5px);
	}
	31.5% {
		transform: translateX(-3px);
	}
	43.5% {
		transform: translateX(2px);
	}
	50% {
		transform: translateX(0);
	}
}
